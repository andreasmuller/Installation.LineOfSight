//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;

float4x4 RoomTransform;
float4x4 ObjectInverseTransform;

float Radius = 1.0f;
float Level = 1.0f;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float PS(psInput input) : SV_Target
{
	float4 PosProjection;
	PosProjection.xz = input.uv * 2.0f - 1.0f;
	PosProjection.z *= -1.0f;
	PosProjection.y = 0.0f;
	PosProjection.w = 1.0f;
	
	float4 PosRoomObject = PosProjection;
	PosRoomObject.xyz /= 2.0f;
	
	float4 PosWorld = mul(PosRoomObject, RoomTransform);
	float4 PosObject = mul(PosWorld, ObjectInverseTransform);
	PosObject /= PosObject.w;
	
	float sourceToSpeaker = length(PosObject.xyz);
	return Radius / sourceToSpeaker * Level;
}

technique10 Process
{
	pass P0 <string format="R32_Float";>
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



